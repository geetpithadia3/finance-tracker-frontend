name: Deploy Frontend to Amazon EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_IP: ${{ vars.EC2_INSTANCE_IP}}    # Replace with your EC2 instance IP
  BACKEND_URL: ${{ vars.BACKEND_URL }}  # Backend URL from secrets

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            VITE_API_BASE_URL=${{ secrets.BACKEND_URL }}
          tags: |
            ghcr.io/geetpithadia3/finance-tracker-frontend:${{ github.sha }}
            ghcr.io/geetpithadia3/finance-tracker-frontend:main

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: Prod
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to GitHub Container Registry on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Create or update environment file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create or update the environment file
            cat > /home/ubuntu/.env << EOL
            REACT_APP_API_URL=${{ secrets.BACKEND_URL }}
            VITE_API_BASE_URL=${{ secrets.BACKEND_URL }}
            EOL
            
            chmod 600 /home/ubuntu/.env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest image
            docker pull ghcr.io/geetpithadia3/finance-tracker-frontend:${{ github.sha }}

            docker images
            
            # # Stop and remove the existing container if it exists
            # docker stop finance-tracker-frontend || true
            # docker rm finance-tracker-frontend || true
            
            # Run the new container with environment variables
            docker run -d \
              --name finance-tracker-frontend \
              -p 80:80 \
              --restart unless-stopped \
              --env-file /home/ubuntu/.env \
              ghcr.io/geetpithadia3/finance-tracker-frontend:${{ github.sha }}
            
            # Cleanup old images
            docker system prune -f
            
            # Verify deployment
            echo "Waiting for container to start..."
            sleep 10
            docker ps | grep finance-tracker-frontend
            
            # Check container logs
            docker logs finance-tracker-frontend